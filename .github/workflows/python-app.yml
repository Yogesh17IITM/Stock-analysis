# This workflow will install Python dependencies, run tests and display stock analysis information
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Stock Analysis Pipeline

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  schedule:
    - cron: "30 4 * * *"  # 10:00 AM IST
    - cron: "30 9 * * *"  # 3:00 PM IST

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install yfinance pandas matplotlib numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Validate Python script
        run: |
          python -m py_compile test.py

      - name: Display Stock Analysis Information
        run: |
          echo "Stock Analysis Tool Information:"
          echo "==============================="
          cat README.md
          echo -e "\nCurrent Configuration:"
          echo "==================="
          cat config.rb

      - name: Test stock analysis script
        id: analysis
        run: |
          # Run in headless mode since we're in CI environment
          export MPLBACKEND=Agg
          python test.py
          # Check if any plots were generated
          if [ -d "samples/individual_plots" ] && [ "$(ls -A samples/individual_plots/*.png 2>/dev/null)" ]; then
            echo "analysis_success=true" >> $GITHUB_OUTPUT
            echo "✅ Stock analysis visualizations generated successfully"
          else
            echo "analysis_success=false" >> $GITHUB_OUTPUT
            echo "❌ Stock analysis visualization failed"
            exit 1
          fi

      - name: Generate Email Content
        if: steps.analysis.outputs.analysis_success == 'true'
        run: |
          # Create HTML email content
          echo "<html><body>" > email_content.html
          echo "<h2>Stock Analysis Report for $(date +'%Y-%m-%d %H:%M %Z')</h2>" >> email_content.html
          echo "<p>Analysis completed successfully. Please find the analysis results below.</p>" >> email_content.html
          echo "<h3>Configuration:</h3>" >> email_content.html
          echo "<pre style='background-color: #f5f5f5; padding: 10px; border-radius: 5px;'>" >> email_content.html
          cat config.rb >> email_content.html
          echo "</pre>" >> email_content.html
          echo "<h3>Individual Stock Analysis Results:</h3>" >> email_content.html

          # Add analysis results from text files
          for file in samples/individual_plots/*_analysis.txt; do
            if [ -f "$file" ]; then
              echo "<pre style='background-color: #f5f5f5; padding: 10px; border-radius: 5px;'>" >> email_content.html
              cat "$file" >> email_content.html
              echo "</pre><br>" >> email_content.html
            fi
          done

          echo "</body></html>" >> email_content.html

      - name: Send email
        if: steps.analysis.outputs.analysis_success == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Daily Stock Analysis Report - ${{ github.repository }}
          to: yogeshwaranrubin@gmail.com,lakshmipriyamahadevan@gmail.com
          from: GitHub Actions
          html_body: file://email_content.html
          attachments: samples/individual_plots/*.png
